version: '3.8'

services:
  web:
    build: .
    ports:
      - "5001:5000"
    volumes:
      - ./logs:/app/logs
      - ./instance:/app/instance
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "flask db upgrade &&
             gunicorn --bind 0.0.0.0:5000 --workers 4 'app:create_app()'"

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=effect_crm
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:6-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  celery:
    build: .
    volumes:
      - ./logs:/app/logs
      - ./instance:/app/instance
    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: unless-stopped
    command: celery -A app.celery worker --loglevel=info

volumes:
  postgres_data:
  redis_data: 